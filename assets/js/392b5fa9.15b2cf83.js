"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[658],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),g=a,f=c["".concat(l,".").concat(g)]||c[g]||d[g]||s;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=g;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},998:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var r=t(7462),a=t(3366),s=(t(7294),t(3905)),o=["components"],i={id:"person",title:"Person"},l=void 0,p={unversionedId:"person",id:"person",title:"Person",description:"Get current person",source:"@site/docs/person.md",sourceDirName:".",slug:"/person",permalink:"/sherl-sdk-js/docs/person",draft:!1,editUrl:"https://github.com/Winzana/sherl-sdk-js/edit/master/docs/docs/person.md",tags:[],version:"current",frontMatter:{id:"person",title:"Person"},sidebar:"sidebar",previous:{title:"Product",permalink:"/sherl-sdk-js/docs/product"},next:{title:"Organization",permalink:"/sherl-sdk-js/docs/organization"}},u={},c=[{value:"Get current person",id:"get-current-person",level:2},{value:"Get person by id",id:"get-person-by-id",level:2},{value:"Get list of persons",id:"get-list-of-persons",level:2},{value:"Get person address",id:"get-person-address",level:2},{value:"Get person configuration",id:"get-person-configuration",level:2},{value:"Register a user for your sherl",id:"register-a-user-for-your-sherl",level:2},{value:"Register a user for your application",id:"register-a-user-for-your-application",level:2},{value:"Update a user",id:"update-a-user",level:2}],d={toc:c};function g(e){var n=e.components,t=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"get-current-person"},"Get current person"),(0,s.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,s.kt)("p",null,"Retrieve logged-in person information."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const me = await person(client).getMe();\n")),(0,s.kt)("p",null,"This call returns on object of ",(0,s.kt)("a",{parentName:"p",href:"person-types"},"IPerson")),(0,s.kt)("h2",{id:"get-person-by-id"},"Get person by id"),(0,s.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,s.kt)("p",null,"Retrieve person information by ID."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const person = await person(client).getPersonById(id: string);\n")),(0,s.kt)("p",null,"This call returns an object of ",(0,s.kt)("a",{parentName:"p",href:"person-types"},"IPerson")),(0,s.kt)("h2",{id:"get-list-of-persons"},"Get list of persons"),(0,s.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,s.kt)("p",null,"Retrieve a list of persons."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const persons = await person(client).getPersons(page: number, itemPerPage: number, filters: IPersonFilters);\n")),(0,s.kt)("p",null,"You can see ",(0,s.kt)("strong",{parentName:"p"},"IPersonFilters")," interface ",(0,s.kt)("a",{parentName:"p",href:"person-types"},"here")),(0,s.kt)("p",null,"This call returns a ",(0,s.kt)("a",{parentName:"p",href:"pagination"},"paginated")," of ",(0,s.kt)("a",{parentName:"p",href:"person-types"},"IPerson")),(0,s.kt)("h2",{id:"get-person-address"},"Get person address"),(0,s.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,s.kt)("p",null,"Retrieve person address by position."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const address = await person(client).getCurrentAddress(position: IPositionInputDto);\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"interface IPositionInputDto {\n  latitude: number;\n  longitude: number;\n}\n")),(0,s.kt)("p",null,"This call returns an object of ",(0,s.kt)("a",{parentName:"p",href:"place-types"},"ILocation")),(0,s.kt)("h2",{id:"get-person-configuration"},"Get person configuration"),(0,s.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,s.kt)("p",null,"Retrieve person configuration vars."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const configs = await person(client).getConfigs();\n")),(0,s.kt)("p",null,"This call returns the ",(0,s.kt)("a",{parentName:"p",href:"config-types"},"configuration (IConfig)")," array for the connected person."),(0,s.kt)("h2",{id:"register-a-user-for-your-sherl"},"Register a user for your sherl"),(0,s.kt)("p",null,"this function create a user"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"await person(client).registerWithEmailAndPassword(user: IPersonRegister);\n")),(0,s.kt)("p",null,"user correspond to this interface "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"interface IPersonRegister {\n  birthDate?: string;\n  firstName?: string;\n  lastName?: string;\n  password: string;\n  confirmPassword: string;\n  email: string;\n  phoneNumber?: string;\n  address?: {\n    id: string;\n    uri: string;\n    createdAt: string;\n    country: string;\n    locality: string;\n    region: string;\n    department: string;\n    postalCode: string;\n    streetAddress: string;\n    complementaryStreetAddress: string;\n    name: string;\n    originId: string;\n    latitude: number;\n    longitude: number;\n  };\n}\n")),(0,s.kt)("h2",{id:"register-a-user-for-your-application"},"Register a user for your application"),(0,s.kt)("p",null,"This function creates a person without creating user"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const newPerson = await person(client).createPerson(user: IPersonRegister);\n")),(0,s.kt)("p",null,"user use the same interface as previous"),(0,s.kt)("h2",{id:"update-a-user"},"Update a user"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const updatedPerson = await person(client).updatePersonById(id: string, user: Partial<IPersonUpdate>);\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"interface IPersonUpdate {\n  firstName: string;\n  lastName: string;\n  address: IPlace;\n  type: PersonTypeEnum;\n  phoneNumber: string;\n  mobilePhoneNumber: string;\n  faxNumber: string;\n  nationality: string;\n  affiliation: IOrganization;\n  latitude: number;\n  longitude: number;\n  birthDate: Date;\n  email: string;\n  gender: GendersEnum;\n  jobTitle: string;\n  metadatas: { [key: string]: any };\n}\n")),(0,s.kt)("p",null,"This call returns the modified ",(0,s.kt)("a",{parentName:"p",href:"person-types"},"user object")))}g.isMDXComponent=!0}}]);