"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9529],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return g}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=l,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return a?n.createElement(g,i(i({ref:t},u),{},{components:a})):n.createElement(g,i({ref:t},u))}));function g(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},424:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=["components"],o={id:"virtual-money",title:"Virtual Money"},s=void 0,c={unversionedId:"virtual-money",id:"virtual-money",title:"Virtual Money",description:"Find wallet by",source:"@site/docs/virtual-money.md",sourceDirName:".",slug:"/virtual-money",permalink:"/sherl-sdk-js/docs/virtual-money",draft:!1,editUrl:"https://github.com/Winzana/sherl-sdk-js/edit/master/docs/docs/virtual-money.md",tags:[],version:"current",frontMatter:{id:"virtual-money",title:"Virtual Money"},sidebar:"sidebar",previous:{title:"User",permalink:"/sherl-sdk-js/docs/user"},next:{title:"Account types",permalink:"/sherl-sdk-js/docs/account-types"}},u={},p=[{value:"Find wallet by",id:"find-wallet-by",level:2},{value:"Credit Wallet",id:"credit-wallet",level:2},{value:"Create Wallet",id:"create-wallet",level:2},{value:"Get Wallet by id",id:"get-wallet-by-id",level:2},{value:"Debit Wallet",id:"debit-wallet",level:2},{value:"Create wallet historical",id:"create-wallet-historical",level:2},{value:"Get Wallet Historical",id:"get-wallet-historical",level:2}],d={toc:p},m="wrapper";function g(e){var t=e.components,a=(0,l.Z)(e,i);return(0,r.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"find-wallet-by"},"Find wallet by"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("p",null,"Find one wallet by id, personId and consumerId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).findOneWallet(\n  id: string,\n  personId: string,\n  consumerId: string,\n);\n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallet"},"IWallet")," object."),(0,r.kt)("h2",{id:"credit-wallet"},"Credit Wallet"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).creditWallet(data: ICreditWalletInputDto);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface ITransferWalletInputDto {\n  amount: number;\n  description: string;\n  organizationId: string;\n}\n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallet"},"IWallet")," object."),(0,r.kt)("h2",{id:"create-wallet"},"Create Wallet"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).createWallet(data: ICreditWalletInputDto);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface ICreateWalletInputDto {\n  id: string;\n  personId: string;\n} \n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallet"},"IWallet")," object."),(0,r.kt)("h2",{id:"get-wallet-by-id"},"Get Wallet by id"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("p",null,"Get one wallet by id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).getWalletById(walletId: string);\n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallet"},"IWallet")," object."),(0,r.kt)("h2",{id:"debit-wallet"},"Debit Wallet"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).debitWallet(walletId: string, data: ICreditWalletInputDto);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface ITransferWalletInputDto {\n  amount: number;\n  description: string;\n  organizationId: string;\n}\n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallet"},"IWallet")," object."),(0,r.kt)("h2",{id:"create-wallet-historical"},"Create wallet historical"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("p",null,"Create a wallet historical"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).createWalletHistorical(walletId: string, data: ITransferWalletInputDto);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface ITransferWalletInputDto {\n  amount: number;\n  description: string;\n  organizationId: string;\n}\n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallethistorical"},"IWalletHistorical")," object."),(0,r.kt)("h2",{id:"get-wallet-historical"},"Get Wallet Historical"),(0,r.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,r.kt)("p",null,"Get a wallet historical"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const wallet = await virtualMoney(client).getWalletHistorical(walletId: string, historicalId: string);\n")),(0,r.kt)("p",null,"This call returns an ",(0,r.kt)("a",{parentName:"p",href:"virtual-money-types#iwallethistorical"},"IWalletHistorical")," object."))}g.isMDXComponent=!0}}]);