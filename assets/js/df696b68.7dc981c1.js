"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2666],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=o(a),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return a?n.createElement(f,l(l({ref:t},u),{},{components:a})):n.createElement(f,l({ref:t},u))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:r,l[1]=c;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1262:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return o},toc:function(){return m}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],c={id:"claim",title:"Claim"},s=void 0,o={unversionedId:"claim",id:"claim",title:"Claim",description:"Get all claims",source:"@site/docs/claim.md",sourceDirName:".",slug:"/claim",permalink:"/sherl-sdk-js/docs/claim",draft:!1,editUrl:"https://github.com/Winzana/sherl-sdk-js/edit/master/docs/docs/claim.md",tags:[],version:"current",frontMatter:{id:"claim",title:"Claim"},sidebar:"sidebar",previous:{title:"Bug Report",permalink:"/sherl-sdk-js/docs/bug-report"},next:{title:"Communication",permalink:"/sherl-sdk-js/docs/communication"}},u={},m=[{value:"Get all claims",id:"get-all-claims",level:2},{value:"Get claim by id",id:"get-claim-by-id",level:2},{value:"Create claim ticket",id:"create-claim-ticket",level:2},{value:"Update claim ticket",id:"update-claim-ticket",level:2}],p={toc:m},d="wrapper";function f(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"get-all-claims"},"Get all claims"),(0,i.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,i.kt)("p",null,"Retrieve all claims."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const claims = await Sherl.claim(client).getAllClaims(page?: number, itemsPerPage?: number, filters?: IClaimTicketFilters);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface IClaimTicketFilters = {\n  [key: string]: any;\n} \n")),(0,i.kt)("p",null,"Return a ",(0,i.kt)("a",{parentName:"p",href:"pagination"},"paginated")," array of ",(0,i.kt)("a",{parentName:"p",href:"claim-types#iclaim"},"IClaim"),"."),(0,i.kt)("h2",{id:"get-claim-by-id"},"Get claim by id"),(0,i.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,i.kt)("p",null,"Retrieve claim informations by ID."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const claim = await Sherl.claim(client).getClaimById(id: string);\n")),(0,i.kt)("p",null,"This call returns an object of ",(0,i.kt)("a",{parentName:"p",href:"claim-types#iclaim"},"IClaim")),(0,i.kt)("h2",{id:"create-claim-ticket"},"Create claim ticket"),(0,i.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,i.kt)("p",null,"Allows you to create a claim ticket"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const claim = await Sherl.claim(client).createClaimTicket(claim: <Partial<IClaimCreate>>);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface IClaimCreate {\n  id: string;\n  personId: string;\n  issueTitle: string;\n  issueMessage: string;\n  schedules: Schedules;\n}\n\ninterface Schedules{\n  allowedFromDate: string;\n  allowedUntilDate: string;\n}\n")),(0,i.kt)("p",null,"This call returns the new ",(0,i.kt)("a",{parentName:"p",href:"claim-types#iclaim"},"IClaim")," object created"),(0,i.kt)("h2",{id:"update-claim-ticket"},"Update claim ticket"),(0,i.kt)("span",{class:"badge badge--warning"},"Require authentication"),(0,i.kt)("p",null,"Allows you to update a claim ticket using its id"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const claim = await Sherl.claim(client).updateClaim(id:string, data: IClaimUpdate);\n")),(0,i.kt)("p",null,"This call returns the updated ",(0,i.kt)("a",{parentName:"p",href:"claim-types#iclaim"},"IClaim")," object"))}f.isMDXComponent=!0}}]);